version: '3.9'

services:
  traefik:
    image: traefik:v2.4
    container_name: traefik
    command:
      - --api.insecure=true
      - --providers.docker
      - --providers.docker.exposedbydefault=false 
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8082:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  db:
    container_name: database
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: buurbak
      POSTGRES_USER: buurbak
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U buurbak" ]
      interval: 10s
      timeout: 5s
      retries: 5

  maildev:
    image: maildev/maildev
    container_name: maildev
    ports:
      - "1025:1025"
      - "1080:1080"
    labels: 
      traefik.enable: true
      traefik.http.routers.maildev.rule: Host(`mail.localhost`)
      traefik.http.services.maildev.loadbalancer.server.port: 1080

  adminer:
    image: adminer
    restart: always
    labels: 
      traefik.enable: true
      traefik.http.routers.adminer.rule: Host(`adminer.localhost`)
      traefik.http.services.adminer.loadbalancer.server.port: 8080

  api:
    image: buurbak-api
    container_name: api
    build:
      context: api
    depends_on:
      db:
          condition: service_healthy
    ports:
      - "8000:80"
    environment:
      DATABASE_NAME: buurbak
      DATABASE_USERNAME: buurbak
      DATABASE_PASSWORD: buurbak
      DATABASE_HOST: db
      MAIL_HOST: maildev
      GCP_AUTH_FILE: not_the_auth_file
      GCP_BUCKET_DIR_NAME: dev
      GCP_BUCKET_ID: buurbak_public
      GCP_PROJECT_ID: celestial-sonar-365614
      RANDOM_DATA: true
      JWT_SECRET: secret
      PORT: 80
      SPRING_PROFILES_ACTIVE: dev
    labels:
      traefik.enable: true
      traefik.http.routers.backend.rule: Host(`localhost`) && PathPrefix(`/api/v1`)
      traefik.http.services.backend.loadbalancer.server.port: 8000

volumes:
  db: